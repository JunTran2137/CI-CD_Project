name: 'Terraform'

on:
  workflow_call: 
    inputs:
      working-directory:
        description: 'Terraform working directory'
        type: string
        required: true
        default: './infra'
    secrets:
      AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key ID'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'AWS Secret Access Key'
        required: true
    outputs:
      ecr_repository:
        description: 'ECR Repository Name'
        value: ${{  }}
      ecs_cluster:
        description: 'ECS Cluster Name'
        value: ${{ steps.apply.outputs.ecs_cluster }}
      ecs_service:
        description: 'ECS Service Name'
        value: ${{ steps.apply.outputs.ecs_service }}
      task_definition:
        description: 'Task Definition Name'
        value: ${{ steps.apply.outputs.task_definition }}


permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    
    defaults:
      run:
        shell: bash
        working-directory: ${{ vars.working-directory }}
      
  

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      run: terraform plan -input=false

    - name: Terraform Apply
      id: apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: |
        terraform apply -auto-approve -input=false
        echo "ecr_repository=$(terraform output -raw ecr_repository_name)" >> $GITHUB_OUTPUT
        echo "ecs_cluster=$(terraform output -raw ecs_cluster_name)" >> $GITHUB_OUTPUT
        echo "ecs_service=$(terraform output -raw ecs_service_name)" >> $GITHUB_OUTPUT
        echo "task_definition=$(terraform output -raw task_definition_name)" >> $GITHUB_OUTPUT
