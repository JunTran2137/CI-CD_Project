name: CI/CD Pipeline

on:
  push:
    branches:
      - main

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0'

      - name: Restore backend dependencies
        run: |
          cd backend
          dotnet restore

      - name: Build backend
        run: |
          cd backend
          dotnet build --configuration Release

      - name: Build Docker images
        run: |
          docker-compose build

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Run frontend tests
        run: |
          cd frontend
          npm test

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0'

      - name: Run backend tests
        run: |
          cd backend
          dotnet test

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker images to ECR
        run: |
          docker-compose push

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Terraform Action
        uses: ./.github/actions/terraform
        with:
          working-directory: ./infra
          environment: production
          aws-region: us-east-1